{"version":3,"sources":["TodoList.js","TodoItems.js","App.js","index.js"],"names":["TodoList","this","props","inputElement","current","focus","className","onSubmit","addItem","placeholder","ref","value","currentItem","text","onChange","handleInput","type","Component","TodoItems","createTasks","item","onClick","deleteItem","key","listItems","entries","map","App","React","createRef","filteredItems","state","items","filter","setState","editItem","e","target","Date","now","preventDefault","newItem","render","document","getElementById"],"mappings":"8MAyBeA,E,wKAtBb,WACEC,KAAKC,MAAMC,aAAaC,QAAQC,U,oBAElC,WACE,OACE,qBAAKC,UAAU,eAAf,SACE,qBAAKA,UAAU,SAAf,SACE,uBAAMC,SAAUN,KAAKC,MAAMM,QAA3B,UACE,uBACEC,YAAY,OACZC,IAAKT,KAAKC,MAAMC,aAChBQ,MAAOV,KAAKC,MAAMU,YAAYC,KAC9BC,SAAUb,KAAKC,MAAMa,cAEvB,wBAAQC,KAAK,SAAb,mC,GAfWC,aCgBRC,E,4MAfbC,YAAc,SAAAC,GACZ,OACE,oBAAmBC,QAAS,kBAAM,EAAKnB,MAAMoB,WAAWF,EAAKG,MAA7D,SACGH,EAAKP,MADCO,EAAKG,M,4CAKlB,WACE,IACMC,EADcvB,KAAKC,MAAMuB,QACDC,IAAIzB,KAAKkB,aAEvC,OAAO,oBAAIb,UAAU,UAAd,SAAyBkB,Q,GAZZP,aC8DTU,E,kDA1Db,aAAe,IAAD,8BACZ,gBAFFxB,aAAeyB,IAAMC,YACP,EAWdP,WAAa,SAACC,GACZ,IAAMO,EAAgB,EAAKC,MAAMC,MAAMC,QAAO,SAACb,GAC7C,OAAOA,EAAKG,MAAQA,KAEtB,EAAKW,SAAS,CACZF,MAAOF,KAhBG,EAmBdK,SAAW,SAACZ,GACV,EAAKW,SAAS,CACZC,UAAU,KArBA,EAyBdpB,YAAc,SAACqB,GACb,IACMxB,EAAc,CAAEC,KADLuB,EAAEC,OAAO1B,MACYY,IAAKe,KAAKC,OAChD,EAAKL,SAAS,CACZtB,iBA7BU,EAgCdJ,QAAU,SAAC4B,GACTA,EAAEI,iBACF,IAAMC,EAAU,EAAKV,MAAMnB,YAC3B,GAAqB,KAAjB6B,EAAQ5B,KAAa,CACvB,IAAMmB,EAAK,sBAAO,EAAKD,MAAMC,OAAlB,CAAyBS,IACpC,EAAKP,SAAS,CACZF,MAAOA,EACPpB,YAAa,CAAEC,KAAM,GAAIU,IAAK,QArClC,EAAKQ,MAAQ,CACXC,MAAO,GACPpB,YAAa,CACXC,KAAM,GACNU,IAAK,IAEPY,UAAU,GARA,E,0CA2Cd,WACE,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,CACEE,QAASP,KAAKO,QACdL,aAAcF,KAAKE,aACnBY,YAAad,KAAKc,YAClBH,YAAaX,KAAK8B,MAAMnB,cAE1B,cAAC,EAAD,CAAWa,QAASxB,KAAK8B,MAAMC,MAAOV,WAAYrB,KAAKqB,oB,GAtD7CL,aCClByB,iBAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.dfd58e42.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass TodoList extends Component {\r\n  componentDidUpdate() {\r\n    this.props.inputElement.current.focus()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"todoListMain\">\r\n        <div className=\"header\">\r\n          <form onSubmit={this.props.addItem}>\r\n            <input\r\n              placeholder=\"Task\"\r\n              ref={this.props.inputElement}\r\n              value={this.props.currentItem.text}\r\n              onChange={this.props.handleInput}\r\n            />\r\n            <button type=\"submit\"> Add Task </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoList","import React, { Component } from 'react'\r\n\r\nclass TodoItems extends Component {\r\n  createTasks = item => {\r\n    return (\r\n      <li key={item.key} onClick={() => this.props.deleteItem(item.key)}>\r\n        {item.text}\r\n      </li>\r\n    )\r\n  }\r\n  render() {\r\n    const todoEntries = this.props.entries\r\n    const listItems = todoEntries.map(this.createTasks)\r\n\r\n    return <ul className=\"theList\">{listItems}</ul>\r\n  }\r\n}\r\n\r\nexport default TodoItems","import React, { Component } from \"react\";\nimport TodoList from \"./TodoList\";\nimport TodoItems from \"./TodoItems\";\n\nclass App extends Component {\n  inputElement = React.createRef();\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      currentItem: {\n        text: \"\",\n        key: \"\"\n      },\n      editItem: false\n    };\n  }\n  deleteItem = (key) => {\n    const filteredItems = this.state.items.filter((item) => {\n      return item.key !== key;\n    });\n    this.setState({\n      items: filteredItems\n    });\n  };\n  editItem = (key) => {\n    this.setState({\n      editItem: true\n    });\n  };\n\n  handleInput = (e) => {\n    const itemText = e.target.value;\n    const currentItem = { text: itemText, key: Date.now() };\n    this.setState({\n      currentItem\n    });\n  };\n  addItem = (e) => {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    if (newItem.text !== \"\") {\n      const items = [...this.state.items, newItem];\n      this.setState({\n        items: items,\n        currentItem: { text: \"\", key: \"\" }\n      });\n    }\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <TodoList\n          addItem={this.addItem}\n          inputElement={this.inputElement}\n          handleInput={this.handleInput}\n          currentItem={this.state.currentItem}\n        />\n        <TodoItems entries={this.state.items} deleteItem={this.deleteItem} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}